{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendListItem/FriendListItem.module.css","components/Container/Container.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Container/Container.js","components/Profile/Profile.js","helpers/colorRandomizer.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Profile","name","tag","location","avatar","stats","profile","description","src","alt","width","statsItem","label","quantity","followers","views","likes","randomizer","Math","random","Statistics","title","statistics","statList","map","percentage","id","style","backgroundColor","randomiser","item","FriendListItem","stat","isOnline","protoType","PropTypes","string","isRequired","bool","FriendList","friends","friendList","TransactionHistory","items","transactionHistory","type","amount","currency","array","number","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7c91037.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3UAH5\",\"avatar\":\"Profile_avatar__1beFe\",\"name\":\"Profile_name__2HPTQ\",\"tag\":\"Profile_tag__2xmpD\",\"location\":\"Profile_location__1USC3\",\"label\":\"Profile_label___RoBe\",\"stats\":\"Profile_stats__3PGcI\",\"statsItem\":\"Profile_statsItem__2jODE\",\"quantity\":\"Profile_quantity__24XAH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__3vbof\",\"statistics\":\"Statistics_statistics__2W_LX\",\"statList\":\"Statistics_statList__1OozN\",\"item\":\"Statistics_item__iBoZO\",\"label\":\"Statistics_label__hnXkE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__lu4tp\",\"status\":\"FriendListItem_status__3miwR\",\"status-online\":\"FriendListItem_status-online__2irgf FriendListItem_status__3miwR\",\"status-offline\":\"FriendListItem_status-offline__3sslw FriendListItem_status__3miwR\",\"avatar\":\"FriendListItem_avatar__20g4Y\",\"name\":\"FriendListItem_name__2DTq0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2z5b6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__20Tx5\"};","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Profile.module.css';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img\n          src={avatar}\n          alt=\"Аватар пользователя\"\n          className={s.avatar}\n          width=\"100\"\n        />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.statsItem}>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{stats.followers}</span>\n        </li>\n        <li className={s.statsItem}>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{stats.views}</span>\n        </li>\n        <li className={s.statsItem}>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.exact({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","const randomizer = () => {\n  return `rgb(${(Math.random() * 255) << 0}, ${(Math.random() * 255) << 0}, ${\n    (Math.random() * 255) << 0\n  })`;\n};\nexport default randomizer;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\nimport randomiser from '../../helpers/colorRandomizer';\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={s.statistics}>\n      <h2 className={s.title}>{title}</h2>\n\n      <ul className={s.statList}>\n        {stats.map(({ label, percentage, id }) => {\n          return (\n            <li\n              style={{ backgroundColor: randomiser() }}\n              key={id}\n              className={s.item}\n            >\n              <span className={s.label}>{label}</span>\n              <span className={s.percentage}>{percentage}%</span>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.array.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FriendListItem.module.css';\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n  const stat = isOnline ? 'status-online' : 'status-offline';\n  return (\n    <li className={s.item}>\n      <span className={s[stat]}></span>\n      <img className={s.avatar} src={avatar} alt={name} width=\"60\" />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.protoType = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport s from './FriendList.module.css';\nimport FriendListItem from './FriendListItem/FriendListItem';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={s.friendList}>\n      {friends.map(({ avatar, name, id, isOnline }) => {\n        return (\n          <FriendListItem\n            key={id}\n            name={name}\n            avatar={avatar}\n            isOnline={isOnline}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.array.isRequired,\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={s.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(({ id, type, amount, currency }) => {\n          return (\n            <tr key={id}>\n              <td>{type}</td>\n              <td>{amount}</td>\n              <td>{currency}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.protoType = {\n  items: PropTypes.array.isRequired,\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.number.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n\nexport default TransactionHistory;\n","import Container from './components/Container/Container';\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport user from './data/user.json';\nimport statisticalData from './data/statistical-data.json';\nimport friends from './data/friends.json';\nimport transactions from './data/transactions.json';\n// import { Component } from 'react';\n// import shortId from 'shortid';\n\nexport default function App() {\n  return (\n    <>\n      <Container>\n        <Profile\n          name={user.name}\n          tag={user.tag}\n          location={user.location}\n          avatar={user.avatar}\n          stats={user.stats}\n        />\n      </Container>\n      <Container>\n        <Statistics title=\"Upload stats\" stats={statisticalData} />\n      </Container>\n      <Container>\n        <FriendList friends={friends} />\n      </Container>\n\n      <TransactionHistory items={transactions} />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}